---
import type { HTMLTag, Polymorphic } from 'astro/types';

/**
 * Props for the card component.
 */
type Props<As extends HTMLTag = 'div'> = Omit<Polymorphic<{ as: As }>, 'as'> & {
  /**
   * The polymorphic component to render the card as. Defaults to `div`.
   */
	as?: As;
  /**
   * Whether the card should be full width. Defaults to `false`.
   */
	fullWidth?: boolean;
  /**
   * Whether the card should be full height. Defaults to `false`.
   */
	fullHeight?: boolean;
  /**
   * The variant of the card. Defaults to `default`.
   */
  variant?: 'default' | 'filled';
};

const { 
  as: As = 'div',
  fullWidth,
  fullHeight,
  variant = 'default',
  ...props
} = Astro.props;
---
<As class="sui-card" class:list={[fullWidth && "full-w", fullHeight && "full-h", variant]} {...props}>
  <div class="sui-card-header">
    <slot name="header" />
  </div>
  <div class="sui-card-body">
    <slot />
  </div>
  <div class="sui-card-footer">
    <slot name="footer" />
  </div>
</As>
<style>
  .sui-card {
    border: 1px solid hsl(var(--border));
    background-color: hsl(var(--background-base));
    border-radius: .5rem;
    width: fit-content;
    height: fit-content;
  }

  .sui-card.filled {
    background-color: hsl(var(--background-step-3));
    border: none;
  }

  .sui-card.full-w {
    width: 100%;
  }

  .sui-card.full-h {
    height: 100%;
  }

  .sui-card-header:has(*) {
    padding: 1rem 1rem 0rem 1rem;
    * {
      margin: 0;
    }
  }

  .sui-card-body {
    padding: 1rem;
  }

  .sui-card-footer:has(*) {
    border-top: 1px solid hsl(var(--border));
    padding: 1rem;
  }

  .filled .sui-card-footer {
    border: none;
  }

  @media screen and (max-width: 840px) {
    .sui-card {
      width: 100%;
    }
  }
</style>
