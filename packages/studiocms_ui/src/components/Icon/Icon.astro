---
import { icons } from '@iconify-json/heroicons';
import { getIconData, iconToSVG, replaceIDs } from '@iconify/utils';
import type { HTMLAttributes } from 'astro/types';
import { type HeroIconName } from './iconType.js';

interface SVGAttributes extends HTMLAttributes<'svg'> {
	// biome-ignore lint/suspicious/noExplicitAny: Allow any string index
	[key: string]: any;
}

interface Props extends HTMLAttributes<'svg'> {
	name: HeroIconName;
}

const { name, ...props } = Astro.props;
const attributes = props as SVGAttributes;
const iconData = getIconData(icons, name);

if (!iconData) {
	throw new Error(`Icon "${name}" is missing`);
}

const renderData = iconToSVG(iconData, {
	height: attributes.height || 24,
	width: attributes.width || 24,
});

const body = replaceIDs(renderData.body);

let renderAttribsHTML =
	body.indexOf('xlink:') === -1 ? '' : ' xmlns:xlink="http://www.w3.org/1999/xlink"';

for (const attr in attributes) {
	renderAttribsHTML += ` ${attr}="${attributes[attr]}"`;
}

const svg = `<svg xmlns="http://www.w3.org/2000/svg"${renderAttribsHTML}>${body}</svg>`;
---

<Fragment set:html={svg} />
