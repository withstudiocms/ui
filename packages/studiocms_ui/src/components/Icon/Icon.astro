---
import { type AvailableIcons, type IconCollections, iconCollections } from 'studiocms:ui/icons';
import * as Icons from 'studiocms:ui/icons';
import type { HTMLAttributes } from 'astro/types';
import IconBase from './IconBase.astro';
import { StudioCMS_UI_IconError, errorHintBuilder } from './errors.js';

interface Props extends HTMLAttributes<'svg'> {
	name: AvailableIcons;
	height: number;
	width: number;
}

const { name: _name, height, width, ...rest } = Astro.props;

if ((_name.includes(':') && _name.split(':').length > 2) || _name.split(':').length < 1) {
	throw new StudioCMS_UI_IconError(
		`Invalid icon name: ${_name}`,
		errorHintBuilder({ iconCollections, prefix: '', iconName: _name })
	);
}

const [prefix, name] = _name.split(':');

const iconCollection = Icons[prefix as IconCollections];

if (!prefix || !iconCollections.includes(prefix as IconCollections) || !iconCollection) {
	throw new StudioCMS_UI_IconError(
		`Invalid icon collection: ${prefix}`,
		errorHintBuilder({ iconCollections, prefix, iconName: name })
	);
}

if (!name) {
	throw new StudioCMS_UI_IconError(
		`Invalid icon name: ${name}`,
		errorHintBuilder({ iconCollections, prefix, iconName: name })
	);
}
---
<IconBase {iconCollection} {name} {prefix} {...rest} {height} {width} />
