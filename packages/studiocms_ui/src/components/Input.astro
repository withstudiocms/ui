---
import type { HTMLAttributes } from 'astro/types';
import { generateID } from '../utils/generateID';

interface Props extends HTMLAttributes<'input'> {
	label?: string;
	type?: 'text' | 'password' | 'email' | 'number' | 'tel' | 'url';
	placeholder?: string;
	isRequired?: boolean;
	name?: string;
	disabled?: boolean;
	defaultValue?: string;
	class?: string;
};

const {
	label,
	placeholder,
	name = generateID('input'),
	type = 'text',
	defaultValue,
	isRequired = false,
	disabled = false,
	class: className,
	...props
} = Astro.props;
---

<label for={name} class="sui-input-label" class:list={[disabled && "disabled"]}>
  {label && (
		<span class="label">
			{label} <span class="req-star">{isRequired && "*"}</span>
		</span>
	)}
  <input
    placeholder={placeholder}
    name={name}
    id={name}
    type={type}
    class="sui-input"
		class:list={[className]}
    required={isRequired}
    disabled={disabled}
    value={defaultValue}
		{...props}
  />
</label>
<style>
	.sui-input-label {
		width: 100%;
		display: flex;
		flex-direction: column;
		gap: .25rem;
	}

	.sui-input-label.disabled {
		opacity: 0.5;
		pointer-events: none;
		color: hsl(var(--text-muted));
	}

	.label {
		font-size: 14px;
	}

	.sui-input {
		padding: .5rem 1rem;
		border-radius: 8px;
		border: 1px solid hsl(var(--border));
		background: hsl(var(--background-step-2));
		color: hsl(var(--text-normal));
		transition: all .15s ease;
	}

	.sui-input:hover {
		background: hsl(var(--background-step-3));
	}

	.sui-input:active,
	.sui-input:focus {
		border: 1px solid hsl(var(--primary-base));
		outline: none;
		background: hsl(var(--background-step-2));
	}

	.disabled .sui-input:active {
		border: 1px solid hsl(var(--border));
	}

	.req-star {
		color: hsl(var(--danger-base));
		font-weight: 700;
	}
</style>
