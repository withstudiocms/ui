---
import Icon from '../../utils/Icon.astro';
import type { StudioCMSColorway } from '../../utils/colors';
import type { HeroIconName } from '../../utils/iconType';

interface Option {
	label: string;
	value: string;
	disabled?: boolean;
	color?: StudioCMSColorway;
  icon?: HeroIconName;
  href?: string;
};

interface Props {
	options: Option[];
	disabled?: boolean;
	id: string;
	align?: 'start' | 'center' | 'end';
	triggerOn?: 'left' | 'right' | 'both';
  offset?: number;
};

const { options, disabled = false, align = 'center', id, triggerOn = 'left', offset = 0 } = Astro.props;
---
<div 
  class="sui-dropdown-container"
  class:list={[disabled && 'disabled']}
  data-align={align}
  id={`${id}-container`}
  data-trigger={triggerOn}
  transition:persist
  transition:persist-props
>
  <div class="sui-dropdown-toggle" id={`${id}-toggle-btn`}>
    <slot />
  </div>
  <ul class="sui-dropdown" class:list={[align]} role="listbox" id={`${id}-dropdown`} transition:persist transition:persist-props>
    {options.map(({ value, disabled, color, label, icon, href }) => (
      <li
        class="sui-dropdown-option"
        data-value={value}
        class:list={[disabled && "disabled", icon && "has-icon", color, href && "has-href"]}
      >
        {icon && (
          <Icon width={24} height={24} name={icon} />
        )}
        {href ? (
          <a href={href} class="sui-dropdown-link">{label}</a>
        ) : (
          <span>{label}</span>
        )}
      </li>
    ))}
  </ul>
</div>
<style define:vars={{ offset: `${offset}px` }}>
  .sui-dropdown-toggle {
    width: fit-content;
  }

  .sui-dropdown-container {
    position: relative;
    display: flex;
    flex-direction: column;
    gap: .25rem;
  }

  .sui-dropdown {
    position: absolute;
    list-style: none;
    margin: 0;
    padding: 0;
    flex-direction: column;
    border-radius: .5rem;
    background-color: hsl(var(--background-step-2));
    overflow: hidden;
    left: 0;
    z-index: 90;
    min-width: 200px;
    max-width: min-content;

    height: 0;
    border: none;
    pointer-events: none;
    user-select: none;

    box-shadow: 0px 4px 8px hsl(var(--shadow), 0.5);
  }

  @keyframes pop-up {
    0% {
      scale: 0.9;
      opacity: 0;
    }

    100% {
      scale: 1;
      opacity: 1;
      user-select: all;
    }
  }

  @keyframes pop-down {
    0% {
      scale: 1;
      height: auto;
      border: initial;
      pointer-events: all;
      top: auto;
      bottom: auto;
      border: 1px solid hsl(var(--border));
      opacity: 1;
      user-select: all;
    }

    99.9999% {
      scale: 0.9;
      height: auto;
      border: initial;
      pointer-events: all;
      bottom: initial;
      top: auto;
      bottom: auto;
      border: 1px solid hsl(var(--border));
      opacity: 0;
    }

    100% {
      height: 0;
      border: none;
      pointer-events: none;
      user-select: none;
    }
  }

  .sui-dropdown.initialized {
    animation: pop-down .15s ease forwards;
  }

  .sui-dropdown.initialized.active {
    display: flex;
    border: 1px solid hsl(var(--border));
    height: auto;
    pointer-events: all;

    animation: pop-up .15s ease forwards;
  }

  .sui-dropdown.initialized.below {
    top: calc(100% + .25rem + var(--offset)) !important;
    bottom: auto;

    transform-origin: top center;
  }

  .sui-dropdown.below.start {
    transform-origin: top left;
  }

  .sui-dropdown.below.end {
    transform-origin: top right;
  }

  .sui-dropdown.above {
    top: auto;
    bottom: calc(100% + .25rem + var(--offset)) !important;
    transform-origin: bottom center;
  }

  .sui-dropdown.above.start {
    transform-origin: bottom left;
  }

  .sui-dropdown.above.end {
    transform-origin: bottom right;
  }

  .sui-dropdown-option {
    padding: .5rem .75rem;
    cursor: pointer;
    font-size: .975em;
    transition: all .15s ease;
    display: flex;
    flex-direction: row;
    gap: .5rem;
    align-items: center;
    width: 100%;
    white-space: normal;
    user-select: none;
  }

  .sui-dropdown-option:hover {
    background-color: hsl(var(--background-step-3));
  }

  .sui-dropdown-option.has-href {
    padding: 0;
  }

  .sui-dropdown-link {
    padding: .5rem .75rem;
    width: 100%;
  }

  .sui-dropdown-option.primary {
    color: hsl(var(--primary-base));
  }

  .sui-dropdown-option.primary:hover {
    background-color: hsl(var(--primary-base));
    color: hsl(var(--text-inverted));
  }

  .sui-dropdown-option.success {
    color: hsl(var(--success-base));
  }

  .sui-dropdown-option.success:hover {
    background-color: hsl(var(--success-base));
    color: hsl(var(--text-dark));
  }

  .sui-dropdown-option.warning {
    color: hsl(var(--warning-base));
  }

  .sui-dropdown-option.warning:hover {
    background-color: hsl(var(--warning-base));
    color: hsl(var(--text-dark));
  }

  .sui-dropdown-option.danger {
    color: hsl(var(--danger-base));
  }

  .sui-dropdown-option.danger:hover {
    background-color: hsl(var(--danger-base));
    color: hsl(var(--text-light));
  }

  .sui-dropdown-option.disabled {
    pointer-events: none;
    color: hsl(var(--text-muted));
  }

  .sui-dropdown-option.end {
    justify-content: space-between;
  }

  .sui-dropdown-option.has-icon {
    padding-left: .5rem;
  }
</style>
